/*
 * 
 * 1. 클래스의 구성 요소
 * class ClassName {
 * 
 * ---------------------------------------------------
 * 변수(인스턴스변수,멤버변수,공유변수)
 * = 따로 저장되는 변수	  (instance 변수 >> new)
 * = 공통으로 저장되는 변수 (static)	=> 한 개의 메모리만 생성됨
 * ---------------------------------------------------
 * 메소드 (멤버메소드) => static이 없는 메소드
 * ---------------------------------------------------
 * 생성자 => 멤버변수의 초기화, 객체 생성시에 호출되는 메소드
 * ---------------------------------------------------
 * 
 * }
 * 		** class 블럭에서는 연산자, 제어문 사용하면 안 된다 
 * 					=> 선언만 가능하다
 * 					=> 변수 값을 지정할 때는 선언과 동시에 설정한다
 * 						int i = 100;
 * 						int i; i = 100;	>> 오류, 클래스 안에서는 변수를 가져다 쓸 수 없다>> X
 * 					int i;			>> O 선언만 가능
 * 				}
 * 
 * ---------------------------------------------------		
 * 1. 객체지향 프로그램 (OOP)
 * 		> 여러 개의 클래스를 만들어서 조립하는 프로그램 => CBD
 * 			ex) 웹 사이트
 * 				회원(class) : 회원가입(기능), 회원탈퇴, 회원수정, 로그인, 로그아웃, 아이디찾기, ....
 * 					class 1개를 부품이라고 한다
 * 				게시판 : 글쓰기, 수정, 상세보기, 삭제, 찾기, ....
 * 				맛집 : 목록, 상세보기, 댓글, 찾기, 추천, 예약, ....
 * ---------------------------------------------------	
 * 2. 객체 (객체지향의 객체가 뭐냐, 특성(캡슐화, 다형성, 추상화, 상속)이 뭐냐)
 * 	  ---
 * 		물리적으로 존재하는 것 (눈에 보이는 것)
 * 			ex) 자동차, 사람, 책, ....
 * 				자동차 >> 속성 : 브랜드, 속도, 색상, 번호, ... >> 변수 (정적)
 * 					 >> 기능(동작) : 달린다, 속도 줄이기, 브레이크, .... >> 메소드 (동적)
 * 		추상적인 것 (날씨, 회사, 게임, ...)
 * 		==> 자바에서 모델링 : 변수, 메소드
 * 			ex) 사람						>> Class
 * 				이름, 설병, 주민번호, 나이	>> 변수
 * 				먹는다, 달린다, 걷는다, 말한다	>> 메소드
 * 				
 * 				class 사람 {
 * 					String name,
 * 					String sex;
 * 					int age;
 * 				}					>> 모델링한다 >> 메모리 저장 (인스턴스)
 * 
 * 	** 객체지향 => 클래스끼리 상호작용을 한다
 * 		사람 ==> 계산기
 *     (요청)		(응답)
 * 		---대상자 actor
 * 
 * 		객체와 클래스
 * 		집 만들기
 * 		설계 ==> 집 완성
 * 		설계 ==> 완성 (활용)(메모리에 저장)
 * 		---		---------
 * 		클래스	   객체
 * 
 * 		class {					new className() ==> 객체.메소드(변수)
 * 			변수, 메소드
 * 		}
 * 
 * 		클래스로부터 객체 생성하기 위해서는 변수/메소드가 정의
 * 								   ----------
 * 		클래스를 저장하면 인스턴스(객체)
 * 		A a = new A()
 * 		A >> 클래스명
 * 		a >> 객체명
 * 
 * 		=> 하나의 클래스로부터 여러 개의 객체를 생성이 가능하다
 * 		=> 클래스는 한 개에 대한 정보를 가지고 있다
 * 		=> 데이터 따로 저장하기 위해서는 new 연산자를 이용한다
 * 			>> new는 새로운 메모리 공간을 만들어 준다
 * 			>> 사용법
 * 				new 클래스명()
 * 			class A
 * 			A a = new A()
 * 			A a;
 * 			a = new A()
 * 
 * 			class A {
 * 				int a;
 * 				int b;
 * 				String s;		// 4byte
 * 				static int d;	// 12byte
 * 			}
 * 
 * 
 * 			변수
 * 			이름
 * 			성별
 * 			나이	
 * 			--------
 * 			class Human {
 * 				String name;
 * 				String sex;
 * 				int age;
 * 			}
 * 
 * 
 */
public class 클래스_변수정리 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
