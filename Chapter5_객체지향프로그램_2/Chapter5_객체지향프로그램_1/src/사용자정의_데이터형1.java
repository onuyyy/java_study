/*
 * 1.클래스의 구성요소
 * clas ClassName {
 * 
 *  1) 변수 설정
 *  ------------------------
 *  3) 생성자 설정	>> 필요시에만 사용 => 설정하지 않을 경우에는 컴파일러가 자동으로 설정해줌
 *  ------------------------
 *  2) 메소드 설정
 *   
 *  }
 *  
 *  
 *  1) 변수의 종류
 *  클래스 영역에 선언하는 변수 (멤버변수) === heap에 저장
 *  	- instance 변수 : new를 이용했을 때 저장되는 변수 (new에 따라 따로 저장되는 변수)
 *  		형식) 클래스객체명.변수명
 *  			Card c1 = new Card()
 *  			c1.number = 10;		>> . = 주소 접근 연산자
 *  	- 정적 변수 : 한 개의 공간에 저장되는 변수
 *  		==> instance, 정적 변수는 프로그램 종료시까지 사용
 *  			Card c1 = new Card()
 *  			c1.number
 *  			Card.number (****)
 *  메소드 영역에 선언되는 변수 (지역변수) === stack에 저장
 * 		- 메소드가 종료되면 사라지는 변수
 * 		- 메소드 영역에 선언되는 변수
 * 			void aaa() {
 * 				int a = 10;
 * 			}
 * 		-매개변수
 * 			void aaa(int a) {
 * 			}
 * 
 * 
 * 자바 메모리 구조
 * Method Area => method, static이 저장됨
 * ---------------------------------------------------------------
 * Stack 	   => 메모리 자체에서 관리 (생성/소멸) => 블럭변수
 * 			   => 매개변수, 지역변수 
 * 			   => 변수의 초기화가 안 된다 (반드시 초기화를 한 다음에 사용해야 함)
 * --------------------------------------------------------------- => 메모리에서 자동으로 저장
 * Heap		   => 프로그래머 영역 (직접 메모리 크기를 만들어서 저장)
 * 				  자동 소멸이 안 된다 => GC(System.gc())
 * ---------------------------------------------------------------
 * heap, method area => 변수 저장시에 자동 초기화가 된다
 * class ClassName {
 * 		* 자동 초기화
 * 		int a;		=> 0
 * 		double d;	=> 0.0
 * 		boolean b;	=> false
 * 		char c;		=> '\u00000'
 * 		long l;		=> 0L
 * 		String s;	=> null	(null은 참조타입, 주소를 가지고 있지 않은 상태)
 * 						ex) String s; 	=> null 값		//		STring s = ""; => 주소값 있음
 * 							int[] arr;	=> null 값
 *  }
 * 
 * 
 * 
 * 
 * -----------------------------------------------------------------------------------
 * 변수유형				선언위치					메모리저장					사용범위
 * -----------------------------------------------------------------------------------
 * 인스턴스변수				클래스블럭				new : 새로운 저장공간을 만든다
 * 						class ClassName {		>> heap 메모리에 저장
 * 							int a;
 * 						}	
 * -----------------------------------------------------------------------------------
 * 정적변수 		클래스블럭					
 * 				class ClassName {
 * 					static int a;		>> 모든 클래스에서 사용할 수 있도록 만듦 (많이 사용되진 않음), 컴파일시 자동으로 생성
 * 				}
 * -----------------------------------------------------------------------------------
 * 지역변수   		class ClassName {
 * 					void display() {
 * 					int a = 10;		>> 메소드 안에 선언되는 변수
 * 									>> 반드시 초기화가 되어야 한다
 * 									>> 메소드가 호출시마다 생성되고, 끝나면 종료
 * 					}
 * 				}
 * ----------------------------------------------------
 * 
 * 
 * 메모리 저장하는 과정
 * 	메모리에 저장된 상태 : 인스턴스 (객체)
 * 		1) 설계 : 어떤 데이터에 저장할 건지	=> 설계 후 메모리에 저장 						=> 활용				=> 소멸 (메모리 해제)
 * 									 ClassName c = new ClassName()				c.변수명				c = null gc()	>> c의 주소값을 없애기
 * 													    ---------- 생성자			c.메소드명()
 * 				class ClassName {
 * 					String s;
 * 					int a;
 * 				}
 * 
 * 		** 클래스는 한 개에 대한 정보를 설계한다
 * 			맛집 : 5,000개 
 * 			한 개를 설게한 다음에 new를 5,000개 만들어서 활용 (저장 공간이 다름)
 * 
 */

class Student {
	String name;
	int kor;
	int eng;
	int math;
}




public class 사용자정의_데이터형1 {

	public static void main(String[] args) {
		
		Student s1 = new Student();
//		데이터형 
		s1.name = "홍길동";
		s1.kor = 90;
		s1.eng = 80;
		s1.math = 78;
		System.out.println("s1 = "+s1);
		System.out.println(s1.name+s1.kor+s1.eng+s1.math);
		
		Student s2 = new Student();
		s2.name = "가나다"; 
		s2.kor = 85;
		s2.eng = 70;
		s2.math = 60;
		System.out.println("s2 = "+s2);
		
		Student s3 = new Student();
		s3.name = "호롤롤";
		s3.kor = 100;
		s3.eng = 90;
		s3.math = 95;
		System.out.println("s3 = "+s3);
			// name kor eng math 가 다른 데이터 공간에 저장이 된 상태
	}

}
