/*
 * 
 * 변수 : 1개의 데이터를 저장하는 메모리 공간의 이름
 * 	1) 지역변수 (메소드 안에 선언하는 변수)
 * 		- stack 공간에 저장된다, {}을 종료하면 자동으로 사라지는 변수
 * 		- 단점 : 초기화가 없는 상태이기 때무에 반드시 초기화 후에 사용한다
 * 		- scope : 사용 범위 ** 어디서부터 어디까지 사용할지 파악해야 한다
 * 
 * 		- 매개변수 : 메소드
 * 		- 공유변수 : 클래스
 *   	- 멤버변수 :    
 *  2) 데이터형
 *  	- 기본형 : 자바지원
 *  			정수 : byte, int, long
 *  			실수 : double
 *  			문자 : char
 *  			논리 : boolean
 *  	- 참조형 : 사용자 정의 > 배열, 클래스
 *  
 *  ---------------------------------------------------------------
 *  데이터 가공
 *   => 연산자
 *   		단항연산자
 *   			++, (type), !
 *   		이항연산자
 *   			+, -, *, /, %
 *   			==, !=, <, >, <=, >=
 *   			&&, ||
 *   			+=, =-, = 
 *   
 *   		=> 1) char는 연산시 정수형으로 변경
 *   		   2) int 이하는 연산시에 결과 값이 int 로 나온다 byte byte = int
 *   		   3) 모든 연산은 같은 데이터형끼리만 할 수 있다 (자동형변환)
 *   		   4) 비교연산자는 기본형만 가능하다
 *   				> 문자열은 비교연산자로 사용하지 않는다
 *   				> boolean은 ==, != 만 사용 가능
 *   		   5) && || => 효율적인 연산을 한다 ex ) &&일 때 앞에가 false면 뒤에는 연산 안 한다
 *   		   6) += >>
 *   			  int a = 10;
 *   			  a+=10 >> a = a +10
 *  데이터 흐름
 *   => 제어문
 *  ---------------------------------------------------------------
 *  데이터를 관련된 것끼리 묶어서 관리 : 배열, 클래스
 *  							> 배열은 같은 데이터, 클래스는 다른 데이터를 묶는다
 *  관련된 명령어끼리 묶어서 처리 : 메소드
 *  --------------------------------------------------------------- component (class) : 한 가지 기능이 들어간 것
 *  데이터만 묶은 클래스 : ~VO Value Object (변수만 가지고 있는 클래스)
 *  기능만 묶은 클래스 : ~DAO, ~ Manager, ~Service
 *  혼합 클래스 : ~Model, ~ Controller
 * 
 * 
 * 
 * 
 * 
 * 
 *    
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 */
public class 제어문_정리 {

	public static void main(String[] args) {
		
		int a = 10;
		if(a==10) {
			int b = 20; {
				int c = 30; {
					int d = 40;
				}
			}

		}

		
		
		
		
		
		
		

	}

}
